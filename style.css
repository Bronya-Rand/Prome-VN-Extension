/* Prome UI Settings */
.prome-drawer-content {
	gap: 8px;
	display: flex;
	flex-direction: column;
}

.prome_vn_block {
	width: 100%;
}

.prome_details_padding {
	padding: 5px 5px;
}

/* Prome Letterbox Settings */
body.waifuMode.hLetterBox #visual-novel-letterbox-one {
	width: 100vw;
	height: var(--prom-letterbox-size);
	top: 0;
	position: absolute;
	background-color: var(--prom-letterbox-color);
	z-index: 29;
	justify-content: center;
	align-items: center;
}
body.waifuMode.hLetterBox #visual-novel-letterbox-two {
	width: 100vw;
	height: var(--prom-letterbox-size);
	bottom: 0;
	position: absolute;
	background-color: var(--prom-letterbox-color);
	z-index: 29;
	justify-content: center;
	align-items: center;
}
body.waifuMode.vLetterBox #visual-novel-letterbox-one {
	width: var(--prom-letterbox-size);
	height: 100vh;
	top: 0;
	left: 0;
	position: fixed;
	background-color: var(--prom-letterbox-color);
	z-index: 29;
	justify-content: center;
	align-items: center;
}
body.waifuMode.vLetterBox #visual-novel-letterbox-two {
	width: var(--prom-letterbox-size);
	height: 100vh;
	top: 0;
	right: 0;
	position: fixed;
	background-color: var(--prom-letterbox-color);
	z-index: 29;
	justify-content: center;
	align-items: center;
}

/* 
 * Prome Sprite Focus (Multiple Characters) 
 * For shake + focus, see Prome Sprite Shake
 */
#visual-novel-wrapper [id*="expression-"] {
	transition: transform var(--prom-sprite-zoom-speed)
		var(--prom-sprite-zoom-animation), filter 0.4s ease-in;
	filter: brightness(1);
}

#expression-wrapper > div {
	transition: transform var(--prom-sprite-zoom-speed)
		var(--prom-sprite-zoom-animation), filter 0.4s ease-in;
}

/* Sprite Focus to Last Message Character on 'expression-holder' */
body.waifuMode.spriteZoom .prome-sprite-focus {
	transform: scale(1.05);
}

/*
 * Prome Sprite Defocus
 */

/* Sprites not in chat are lower contrast to differentiate focused sprite */
body.waifuMode.spriteDefocusTint .prome-sprite-defocus {
	filter: brightness(0.5) !important;
}

/* Prome Sprite Emulation */

/* Sprites are shown if feature is on */
body.waifuMode.spriteEmulation .prome-render-sprite {
	display: flex !important;
	visibility: visible !important;
}

/* Sprites are hidden if feature is off */
body.waifuMode .prome-render-sprite {
	display: none !important;
	visibility: hidden;
}

/* 
 * Prome Sprite Shake 
 */

body.waifuMode.spriteShake .prome-sprite-shake {
	animation: shake 0.35s infinite;
}

body.waifuMode.spriteShake.spriteZoom
	#visual-novel-wrapper
	.prome-sprite-shake {
	animation: shakeAndFocus 0.35s infinite;
}

body.waifuMode.spriteShake.spriteZoom:not(.userSprite) .prome-sprite-shake {
	animation: shake 0.35s infinite;
}
body.waifuMode.spriteShake.spriteZoom.userSprite .prome-sprite-shake {
	animation: shakeAndFocus 0.35s infinite;
}

@keyframes shake {
	0% {
		transform: translate(0px, 0px) rotate(0deg);
	}
	25% {
		transform: translate(1px, 0px) rotate(0.1deg);
	}
	50% {
		transform: translate(0px, 0px) rotate(0.2deg);
	}
	75% {
		transform: translate(-1px, 0px) rotate(0.1deg);
	}
	100% {
		transform: translate(0px, 0px) rotate(0deg);
	}
}

@keyframes shakeAndFocus {
	0% {
		transform: translate(0px, 0px) rotate(0deg) scale(1.05);
	}
	25% {
		transform: translate(1px, 0px) rotate(0.1deg) scale(1.05);
	}
	50% {
		transform: translate(0px, 0px) rotate(0.2deg) scale(1.05);
	}
	75% {
		transform: translate(-1px, 0px) rotate(0.1deg) scale(1.05);
	}
	100% {
		transform: translate(0px, 0px) rotate(0deg) scale(1.05);
	}
}

/* 
 * Prome Sprite Shadows
 */

body.waifuMode.spriteShadow:not(.spriteEmulation)
	#visual-novel-wrapper
	[id*="expression-"] {
	filter: drop-shadow(
		var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
			var(--prom-sprite-shadow-blur) #111
	);
}

body.waifuMode.spriteShadow.spriteDefocusTint:not(.spriteEmulation)
	.prome-sprite-defocus {
	filter: drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		)
		brightness(0.5) !important;
}

body.waifuMode.spriteShadow #expression-wrapper .expression-holder {
	filter: drop-shadow(
		var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
			var(--prom-sprite-shadow-blur) #111
	);
}

/* 
 * Prome Background Tint
 */

body.worldTint.tintWorld #bg1 {
	filter: var(--prom-background-tint-filter);
}

body.worldTint.tintCharacter #expression-wrapper .expression-holder {
	filter: var(--prom-character-tint-filter);
}

body.worldTint.sharedTint #expression-wrapper .expression-holder {
	filter: var(--prom-background-tint-filter);
}

body.worldTint.tintCharacter #visual-novel-wrapper [id*="expression-"] {
	filter: var(--prom-character-tint-filter);
}

body.worldTint.sharedTint #visual-novel-wrapper [id*="expression-"] {
	filter: var(--prom-background-tint-filter);
}

body.worldTint.tintCharacter.spriteShadow:not(.spriteEmulation)
	#visual-novel-wrapper
	[id*="expression-"] {
	filter: var(--prom-character-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

body.worldTint.sharedTint.spriteShadow:not(.spriteEmulation)
	#visual-novel-wrapper
	[id*="expression-"] {
	filter: var(--prom-background-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

body.worldTint.tintCharacter.spriteShadow.spriteDefocusTint:not(
		.spriteEmulation
	)
	.prome-sprite-defocus {
	filter: var(--prom-character-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		)
		brightness(0.5) !important;
}

body.worldTint.sharedTint.spriteShadow.spriteDefocusTint:not(.spriteEmulation)
	.prome-sprite-defocus {
	filter: var(--prom-background-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		)
		brightness(0.5) !important;
}

body.worldTint.tintCharacter.spriteShadow
	#expression-wrapper
	.expression-holder {
	filter: var(--prom-character-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

body.worldTint.sharedTint.spriteShadow #expression-wrapper .expression-holder {
	filter: var(--prom-background-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

body.worldTint.tintCharacter.spriteShadow
	#visual-novel-wrapper
	[id*="expression-"] {
	filter: var(--prom-character-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

body.worldTint.sharedTint.spriteShadow
	#visual-novel-wrapper
	[id*="expression-"] {
	filter: var(--prom-background-tint-filter)
		drop-shadow(
			var(--prom-sprite-shadow-offsetx) var(--prom-sprite-shadow-offsety)
				var(--prom-sprite-shadow-blur) #111
		);
}

/* 
 * Prome User Sprite Overrides
 * (For ST)
 */
body.waifuMode.userSprite:not(.movingUI) #expression-wrapper {
	position: absolute;
	height: max-content;
	bottom: 0;
}

body.waifuMode.userSprite:not(.movingUI) #expression-wrapper .expression-holder {
	position: unset;
}

body #expression-prome-user {
	display: none;
	visibility: hidden;
}

body.waifuMode.userSprite #expression-prome-user {
	display: flex;
	visibility: visible;
}
